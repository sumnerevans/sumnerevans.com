diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
index 32ff0449..7701b08b 100644
--- a/.github/workflows/test.yml
+++ b/.github/workflows/test.yml
@@ -33,6 +33,9 @@ jobs:
       run: |
         pip install docutils
         rst2html.py --version
+    - name: Install pygments
+      run: |
+        pip install pygments
     - if: matrix.os == 'ubuntu-latest'
       name: Install pandoc on Linux
       run: |
diff --git a/common/hugo/version_current.go b/common/hugo/version_current.go
index f5a71c77..cd52d447 100644
--- a/common/hugo/version_current.go
+++ b/common/hugo/version_current.go
@@ -16,7 +16,7 @@ package hugo
 // CurrentVersion represents the current build version.
 // This should be the only one.
 var CurrentVersion = Version{
-	Number:     0.91,
-	PatchLevel: 2,
-	Suffix:     "",
+	Number:     0.92,
+	PatchLevel: 0,
+	Suffix:     "-DEV",
 }
diff --git a/docs/content/en/content-management/formats.md b/docs/content/en/content-management/formats.md
index 1ae20ba5..4ff8115e 100644
--- a/docs/content/en/content-management/formats.md
+++ b/docs/content/en/content-management/formats.md
@@ -50,7 +50,7 @@ tool on your machine to be able to use these formats.
 Hugo passes reasonable default arguments to these external helpers by default:
 
 - `asciidoctor`: `--no-header-footer -`
-- `rst2html`: `--leave-comments --initial-header-level=2`
+- `rst2html`: `--leave-comments --initial-header-level=2 --syntax-highlight=short --math-output "MathJax https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"`
 - `pandoc`: `--mathjax`
 
 {{% warning "Performance of External Helpers" %}}
diff --git a/markup/rst/convert.go b/markup/rst/convert.go
index b86b35f1..eeebaf38 100644
--- a/markup/rst/convert.go
+++ b/markup/rst/convert.go
@@ -82,10 +82,14 @@ func (c *rstConverter) getRstContent(src []byte, ctx converter.DocumentContext)
 	// handle Windows manually because it doesn't do shebangs
 	if runtime.GOOS == "windows" {
 		pythonBinary, _ := internal.GetPythonBinaryAndExecPath()
-		args := []string{binaryPath, "--leave-comments", "--initial-header-level=2"}
+		args := []string{binaryPath,
+			"--leave-comments", "--initial-header-level=2", "--syntax-highlight=short",
+			"--math-output", "MathJax https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"}
 		result, err = internal.ExternallyRenderContent(c.cfg, ctx, src, pythonBinary, args)
 	} else {
-		args := []string{"--leave-comments", "--initial-header-level=2"}
+		args := []string{
+			"--leave-comments", "--initial-header-level=2", "--syntax-highlight=short",
+			"--math-output", "MathJax https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js"}
 		result, err = internal.ExternallyRenderContent(c.cfg, ctx, src, binaryName, args)
 	}
 
diff --git a/markup/rst/convert_test.go b/markup/rst/convert_test.go
index 5d2882de..9063bb4c 100644
--- a/markup/rst/convert_test.go
+++ b/markup/rst/convert_test.go
@@ -45,3 +45,33 @@ func TestConvert(t *testing.T) {
 	c.Assert(err, qt.IsNil)
 	c.Assert(string(b.Bytes()), qt.Equals, "<div class=\"document\">\n\n\n<p>testContent</p>\n</div>")
 }
+
+func TestConvertMathJax(t *testing.T) {
+	if !Supports() {
+		t.Skip("rst not installed")
+	}
+	c := qt.New(t)
+	p, err := Provider.New(converter.ProviderConfig{Logger: loggers.NewErrorLogger()})
+	c.Assert(err, qt.IsNil)
+	conv, err := p.New(converter.DocumentContext{})
+	c.Assert(err, qt.IsNil)
+	b, err := conv.Convert(converter.RenderContext{Src: []byte(":math:`ax^2 + bx + c = 0`")})
+	c.Assert(err, qt.IsNil)
+	c.Assert(string(b.Bytes()), qt.Equals,
+		"<div class=\"document\">\n\n\n<p><span class=\"math\">\\(ax^2 + bx + c = 0\\)</span></p>\n</div>")
+}
+
+func TestConvertCodeFormatting(t *testing.T) {
+	if !Supports() {
+		t.Skip("rst not installed")
+	}
+	c := qt.New(t)
+	p, err := Provider.New(converter.ProviderConfig{Logger: loggers.NewErrorLogger()})
+	c.Assert(err, qt.IsNil)
+	conv, err := p.New(converter.DocumentContext{})
+	c.Assert(err, qt.IsNil)
+	b, err := conv.Convert(converter.RenderContext{Src: []byte(".. code:: c\n\n   int i = 0;")})
+	c.Assert(err, qt.IsNil)
+	c.Assert(string(b.Bytes()), qt.Equals,
+		"<div class=\"document\">\n\n\n<pre class=\"code c literal-block\">\n<span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n</pre>\n</div>")
+}
diff --git a/snap/snapcraft.yaml b/snap/snapcraft.yaml
index 09dc915a..fa960594 100644
--- a/snap/snapcraft.yaml
+++ b/snap/snapcraft.yaml
@@ -8,7 +8,7 @@ description: |
 license: "Apache-2.0"
 base: core20
 confinement: strict
-grade: stable # "devel" or "stable"
+grade: devel # "devel" or "stable"
 
 package-repositories:
   - type: apt
diff --git a/temp/0.91.2-relnotes-ready.md b/temp/0.91.2-relnotes-ready.md
deleted file mode 100644
index f40da42b..00000000
--- a/temp/0.91.2-relnotes-ready.md
+++ /dev/null
@@ -1,13 +0,0 @@
-
-
-This is a bug-fix release with a couple of important fixes.
-
-* Revert "config/security: Add HOME to default exec env var whitelist" 623dda71 [@bep](https://github.com/bep) 
-* Make sure we always create the /public folder aee9e11a [@bep](https://github.com/bep) #8166 
-* Fix "stuck on build" in error situations in content processing bd63c1aa [@bep](https://github.com/bep) #8166 
-* deps: Run "go mod tidy" 9eb05807 [@bep](https://github.com/bep) 
-* deps: Upgrade github.com/evanw/esbuild v0.14.7 => v0.14.8 654f513a [@bep](https://github.com/bep) 
-* releaser: Prepare repository for 0.92.0-DEV 759cdf3f [@bep](https://github.com/bep) 
-
-
-
